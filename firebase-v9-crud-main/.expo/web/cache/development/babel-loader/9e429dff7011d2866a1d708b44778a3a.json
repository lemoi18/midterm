{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Calender = function Calender(_ref) {\n  var label = _ref.label,\n      data = _ref.data,\n      onSelect = _ref.onSelect;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      synlig = _useState2[0],\n      setSynlig = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      month = _useState6[0],\n      setMonth = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      day = _useState8[0],\n      setDay = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      time = _useState10[0],\n      setTime = _useState10[1];\n\n  var date = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\n\n  var toggleDropdown = function toggleDropdown() {\n    setSynlig(!synlig);\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableOpacity, {\n      style: styles.item,\n      onPress: function onPress() {\n        return onItemPress(item);\n      },\n      children: _jsx(Text, {\n        children: item.label\n      })\n    });\n  };\n\n  var onItemPress = function onItemPress(item) {\n    setSelected(item);\n    onSelect(item);\n    setSynlig(false);\n  };\n\n  var renderDropdown = function renderDropdown() {\n    if (synlig) {\n      return _jsx(Modal, {\n        visible: synlig,\n        transparent: true,\n        animationType: \"none\",\n        children: _jsx(TouchableOpacity, {\n          style: styles.overlay,\n          onPress: function onPress() {\n            return setSynlig(false);\n          },\n          children: _jsx(View, {\n            style: [styles.dropdown],\n            children: _jsx(FlatList, {\n              data: data,\n              renderItem: renderItem,\n              keyExtractor: function keyExtractor(item, index) {\n                return index.toString();\n              }\n            })\n          })\n        })\n      });\n    }\n  };\n\n  return _jsxs(TouchableOpacity, {\n    style: styles.button,\n    onPress: toggleDropdown,\n    children: [renderDropdown(), _jsx(Text, {\n      style: styles.buttonText,\n      children: selected && selected.label || label\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#efefef',\n    height: 50,\n    zIndex: 1\n  },\n  buttonText: {\n    flex: 1,\n    textAlign: 'center'\n  },\n  dropdown: {\n    position: 'absolute',\n    bottom: 100,\n    top: 100,\n    backgroundColor: '#fff',\n    width: '100%',\n    shadowColor: '#000000',\n    shadowRadius: 4,\n    shadowOffset: {\n      height: 4,\n      width: 0\n    },\n    shadowOpacity: 0.5,\n    overflow: \"hidden\"\n  },\n  overlay: {\n    width: '100%',\n    height: '100%'\n  },\n  item: {\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    borderBottomWidth: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/Lars/ikt205/IKT205-crud-with-firebase/firebase-v9-crud-main/Component/Calender.js"],"names":["useState","Calender","label","data","onSelect","synlig","setSynlig","selected","setSelected","month","setMonth","day","setDay","time","setTime","date","toggleDropdown","renderItem","item","styles","onItemPress","renderDropdown","overlay","dropdown","index","toString","button","buttonText","StyleSheet","create","flexDirection","alignItems","backgroundColor","height","zIndex","flex","textAlign","position","bottom","top","width","shadowColor","shadowRadius","shadowOffset","shadowOpacity","overflow","paddingHorizontal","paddingVertical","borderBottomWidth"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport {Button, StyleSheet, Text, TextInput, View, Modal, TouchableOpacity, FlatList} from 'react-native';\r\n\r\nexport const Calender = ({label, data, onSelect}) => {\r\n    const [synlig, setSynlig] = useState(false);\r\n    const [selected, setSelected] = useState(\"\");\r\n    const [month, setMonth] = useState(\"\");\r\n    const [day, setDay] = useState(\"\");\r\n    const [time, setTime] = useState(\"\");\r\n\r\n    const date =[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\r\n\r\n\r\n\r\n    const toggleDropdown = () => {\r\n        setSynlig(!synlig)\r\n    }\r\n\r\n    const renderItem = ({ item }) => (\r\n        <TouchableOpacity style={styles.item} onPress={() => onItemPress(item)}>\r\n            <Text>{item.label}</Text>\r\n        </TouchableOpacity>\r\n    );\r\n    const onItemPress = (item) => {\r\n        setSelected(item);\r\n        onSelect(item)\r\n        setSynlig(false);\r\n    };\r\n\r\n\r\n    const renderDropdown = () => {\r\n\r\n        if(synlig){\r\n            return(\r\n                <Modal visible={synlig} transparent animationType=\"none\">\r\n                    <TouchableOpacity\r\n                        style={styles.overlay}\r\n                        onPress={() => setSynlig(false)}\r\n                    >\r\n                        <View style={[styles.dropdown]}>\r\n                            <FlatList\r\n                                data={data}\r\n                                renderItem={renderItem}\r\n                                keyExtractor={(item, index) => index.toString()}\r\n                            />\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </Modal>\r\n            );\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={toggleDropdown}\r\n\r\n        >\r\n            {renderDropdown()}\r\n            <Text style={styles.buttonText}>\r\n                {(selected && selected.label) || label}\r\n            </Text>\r\n        </TouchableOpacity>\r\n    );\r\n\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        backgroundColor: '#efefef',\r\n        height: 50,\r\n        zIndex: 1,\r\n    },\r\n    buttonText: {\r\n        flex: 1,\r\n        textAlign: 'center',\r\n    },\r\n    dropdown: {\r\n        position: 'absolute',\r\n        bottom: 100,\r\n        top: 100,\r\n        backgroundColor: '#fff',\r\n        width: '100%',\r\n        shadowColor: '#000000',\r\n        shadowRadius: 4,\r\n        shadowOffset: { height: 4, width: 0 },\r\n        shadowOpacity: 0.5,\r\n        overflow: \"hidden\",\r\n\r\n\r\n    },\r\n    overlay: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    item: {\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 10,\r\n        borderBottomWidth: 1,\r\n    },\r\n\r\n\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}