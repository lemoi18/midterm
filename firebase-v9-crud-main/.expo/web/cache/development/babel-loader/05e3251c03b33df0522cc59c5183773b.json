{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Dropdown = function Dropdown(_ref) {\n  var label = _ref.label,\n      data = _ref.data;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      synlig = _useState2[0],\n      setSynlig = _useState2[1];\n\n  var _useState3 = useState(\"Pick Location\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var toggleDropdown = function toggleDropdown() {\n    setSynlig(!synlig);\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableOpacity, {\n      style: styles.item,\n      onPress: function onPress() {\n        return onItemPress(item);\n      },\n      children: _jsx(Text, {\n        children: item.label\n      })\n    });\n  };\n\n  var onItemPress = function onItemPress(item) {\n    setSelected(item);\n    setSynlig(false);\n  };\n\n  var renderDropdown = function renderDropdown() {\n    if (synlig) {\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setSynlig(false);\n        },\n        children: _jsx(View, {\n          style: styles.dropdown,\n          children: _jsx(FlatList, {\n            data: data,\n            renderItem: renderItem,\n            keyExtractor: function keyExtractor(item, index) {\n              return index.toString();\n            }\n          })\n        })\n      });\n    }\n  };\n\n  return _jsxs(TouchableOpacity, {\n    style: styles.button,\n    onPress: toggleDropdown,\n    children: [renderDropdown(), _jsx(Text, {\n      style: styles.buttonText,\n      children: selected && selected.label || label\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#efefef',\n    height: 50,\n    zIndex: 1\n  },\n  buttonText: {\n    flex: 1,\n    textAlign: 'center'\n  },\n  icon: {\n    marginRight: 10\n  },\n  dropdown: {\n    position: 'absolute',\n    backgroundColor: '#fff',\n    width: '100%',\n    shadowColor: '#000000',\n    shadowRadius: 4,\n    shadowOffset: {\n      height: 4,\n      width: 0\n    },\n    shadowOpacity: 0.5\n  },\n  overlay: {\n    width: '100%',\n    height: '100%'\n  },\n  item: {\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    borderBottomWidth: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/Lars/ikt205/IKT205-crud-with-firebase/firebase-v9-crud-main/Dropdown/Dropdown.js"],"names":["useState","Dropdown","label","data","synlig","setSynlig","selected","setSelected","toggleDropdown","renderItem","item","styles","onItemPress","renderDropdown","dropdown","index","toString","button","buttonText","StyleSheet","create","flexDirection","alignItems","backgroundColor","height","zIndex","flex","textAlign","icon","marginRight","position","width","shadowColor","shadowRadius","shadowOffset","shadowOpacity","overlay","paddingHorizontal","paddingVertical","borderBottomWidth"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport {Button, StyleSheet, Text, TextInput, View, TouchableOpacity, FlatList} from 'react-native';\r\n\r\n\r\n\r\n\r\n export const Dropdown = ({label, data}) => {\r\n    const [synlig, setSynlig] = useState(false);\r\n     const [selected, setSelected] = useState(\"Pick Location\");\r\n\r\n\r\n     const toggleDropdown = () => {\r\n        setSynlig(!synlig)\r\n    }\r\n\r\n     const renderItem = ({ item }) => (\r\n         <TouchableOpacity style={styles.item} onPress={() => onItemPress(item)}>\r\n             <Text>{item.label}</Text>\r\n         </TouchableOpacity>\r\n     );\r\n     const onItemPress = (item) => {\r\n         setSelected(item);\r\n\r\n         setSynlig(false);\r\n     };\r\n\r\n\r\n    const renderDropdown = () => {\r\n\r\n        if(synlig){\r\n            return(\r\n                <TouchableOpacity\r\n                    onPress={() => setSynlig(false)}\r\n                >\r\n                    <View style={styles.dropdown}>\r\n                        <FlatList\r\n                            data={data}\r\n                            renderItem={renderItem}\r\n                            keyExtractor={(item, index) => index.toString()}\r\n                        />\r\n                    </View>\r\n                </TouchableOpacity>\r\n            );\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={toggleDropdown}\r\n\r\n        >\r\n            {renderDropdown()}\r\n            <Text style={styles.buttonText}>\r\n                {(selected && selected.label) || label}\r\n            </Text>\r\n        </TouchableOpacity>\r\n    );\r\n\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        backgroundColor: '#efefef',\r\n        height: 50,\r\n        zIndex: 1,\r\n    },\r\n    buttonText: {\r\n        flex: 1,\r\n        textAlign: 'center',\r\n    },\r\n    icon: {\r\n        marginRight: 10,\r\n    },\r\n    dropdown: {\r\n        position: 'absolute',\r\n        backgroundColor: '#fff',\r\n        width: '100%',\r\n        shadowColor: '#000000',\r\n        shadowRadius: 4,\r\n        shadowOffset: { height: 4, width: 0 },\r\n        shadowOpacity: 0.5,\r\n    },\r\n    overlay: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    item: {\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 10,\r\n        borderBottomWidth: 1,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}