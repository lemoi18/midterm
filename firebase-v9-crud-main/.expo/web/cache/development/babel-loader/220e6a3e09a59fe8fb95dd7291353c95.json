{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { deleteDoc, doc, getDoc, setDoc } from 'firebase/firestore';\nimport { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { db } from \"./Core/Config\";\nimport { Dropdown } from \"./Component/Dropdown.js\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"./Component/Modal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      userDoc = _useState2[0],\n      setUserDoc = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var Create = function Create() {\n    var myDoc = doc(db, \"MyCollection\", \"MyDocument\");\n    var docData = {\n      \"name\": \"iJustine\",\n      \"bio\": \"YouTuber\"\n    };\n    setDoc(myDoc, docData).then(function () {\n      alert(\"Document Created!\");\n    }).catch(function (error) {\n      alert(error.message);\n    });\n  };\n\n  var Read = function Read() {\n    var myDoc = doc(db, \"MyCollection\", \"MyDocument\");\n    getDoc(myDoc).then(function (snapshot) {\n      if (snapshot.exists) {\n        setUserDoc(snapshot.data());\n      } else {\n        alert(\"No Doc Found\");\n      }\n    }).catch(function (error) {\n      alert(error.message);\n    });\n  };\n\n  var Update = function Update(value, merge) {\n    var myDoc = doc(db, \"MyCollection\", \"MyDocument\");\n    setDoc(myDoc, value, {\n      merge: merge\n    }).then(function () {\n      alert(\"Updated Successfully!\");\n      setText(\"\");\n    }).catch(function (error) {\n      alert(error.message);\n    });\n  };\n\n  var Delete = function Delete() {\n    var myDoc = doc(db, \"MyCollection\", \"MyDocument\");\n    deleteDoc(myDoc).then(function () {\n      alert(\"Deleted Successfully!\");\n    }).catch(function (error) {\n      alert(error.message);\n    });\n  };\n\n  var data = [{\n    label: 'Grimstad',\n    lat: 58.3388944863743,\n    lon: 8.579716794017456\n  }, {\n    label: 'Kristiansand',\n    value: '2'\n  }];\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(\"modal\", {\n      children: _jsx(Dropdown, {\n        lable: \"Select Item\",\n        data: data\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Lars/ikt205/IKT205-crud-with-firebase/firebase-v9-crud-main/App.js"],"names":["StatusBar","deleteDoc","doc","getDoc","setDoc","useState","db","Dropdown","Modal","App","userDoc","setUserDoc","text","setText","Create","myDoc","docData","then","alert","catch","error","message","Read","snapshot","exists","data","Update","value","merge","Delete","label","lat","lon","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { deleteDoc, doc, getDoc, setDoc } from 'firebase/firestore';\nimport { useState } from 'react';\nimport { Button, StyleSheet, Text, TextInput, View } from 'react-native';\n// Using DB Reference\nimport { db } from './Core/Config'\nimport {Dropdown} from './Component/Dropdown.js'\nimport {TouchableOpacity} from \"react-native-web\";\nimport Modal from './Component/Modal';\n\nexport default function App() {\n\n  // Storing User Data\n  const [userDoc, setUserDoc] = useState(null)\n  // Update Text\n  const [text, setText] = useState(\"\")\n  // MARK: CRUD Functions\n  const Create = () => {\n    // MARK: Creating New Doc in Firebase\n    // Before that enable Firebase in Firebase Console\n    const myDoc = doc(db, \"MyCollection\", \"MyDocument\")\n\n    // Your Document Goes Here\n    const docData = {\n      \"name\": \"iJustine\",\n      \"bio\": \"YouTuber\"\n    }\n\n    setDoc(myDoc, docData)\n      // Handling Promises\n      .then(() => {\n        // MARK: Success\n        alert(\"Document Created!\")\n      })\n      .catch((error) => {\n        // MARK: Failure\n        alert(error.message)\n      })\n  }\n\n  const Read = () => {\n    // MARK: Reading Doc\n    // You can read what ever document by changing the collection and document path here\n    const myDoc = doc(db, \"MyCollection\", \"MyDocument\")\n\n    getDoc(myDoc)\n      // Handling Promises\n      .then((snapshot) => {\n        // MARK: Success\n        if (snapshot.exists) {\n          setUserDoc(snapshot.data())\n        }\n        else {\n          alert(\"No Doc Found\")\n        }\n      })\n      .catch((error) => {\n        // MARK: Failure\n        alert(error.message)\n      })\n\n  }\n\n  const Update = (value, merge) => {\n    // MARK: Updating Doc\n    const myDoc = doc(db, \"MyCollection\", \"MyDocument\")\n\n    // If you set merge true then it will merge with existing doc otherwise it will be a fresh one\n    setDoc(myDoc, value, { merge: merge })\n      // Handling Promises\n      .then(() => {\n        // MARK: Success\n        alert(\"Updated Successfully!\")\n        setText(\"\")\n      })\n      .catch((error) => {\n        // MARK: Failure\n        alert(error.message)\n      })\n  }\n\n  const Delete = () => {\n    // MARK: Deleting Doc\n    const myDoc = doc(db, \"MyCollection\", \"MyDocument\")\n\n    deleteDoc(myDoc)\n      // Handling Promises\n      .then(() => {\n        // MARK: Success\n        alert(\"Deleted Successfully!\")\n      })\n      .catch((error) => {\n        // MARK: Failure\n        alert(error.message)\n      })\n\n  }\n  const data = [\n    { label: 'Grimstad', lat: 58.3388944863743, lon:8.579716794017456 },\n    { label: 'Kristiansand', value: '2' },\n\n  ];\n  return (\n      <View style={styles.container}>\n          <modal>\n          <Dropdown lable=\"Select Item\" data={data}/>\n          </modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}